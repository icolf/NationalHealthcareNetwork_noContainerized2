// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Organizations.Api.Persistence;

namespace Organizations.Api.Migrations
{
    [DbContext(typeof(OrganizationsContext))]
    [Migration("20190625002847_First migration")]
    partial class Firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Organizations.Api.Persistence.Entities.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Address2")
                        .HasMaxLength(250);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<Guid>("OrganizationId");

                    b.Property<string>("PostalAddress1")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("PostalAddress2")
                        .HasMaxLength(250);

                    b.Property<string>("PostalCity")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("PostalCountry")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("PostalState")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("PostalZip")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("AddressId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new { AddressId = new Guid("123e4567-e89b-12d3-a456-426655440006"), Address1 = "Address1 Organization1", City = "Kansas City", Country = "USA", OrganizationId = new Guid("123e4567-e89b-12d3-a456-426655440001"), PostalAddress1 = "Address1 Organization1", PostalCity = "Kansas City", PostalCountry = "USA", PostalState = "MO", PostalZip = "64158", State = "MO", Zip = "64158" },
                        new { AddressId = new Guid("123e4567-e89b-12d3-a456-426655440007"), Address1 = "Address1 Organization1", City = "Kansas City", Country = "USA", OrganizationId = new Guid("123e4567-e89b-12d3-a456-426655440002"), PostalAddress1 = "Address1 Organization1", PostalCity = "Kansas City", PostalCountry = "USA", PostalState = "MO", PostalZip = "64158", State = "MO", Zip = "64158" }
                    );
                });

            modelBuilder.Entity("Organizations.Api.Persistence.Entities.Organization", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActiveAddressId");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("ImagePath")
                        .HasMaxLength(250);

                    b.Property<bool>("IsHospital");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Ssn")
                        .IsRequired();

                    b.Property<string>("Url")
                        .HasMaxLength(250);

                    b.HasKey("OrganizationId");

                    b.ToTable("Organizations");

                    b.HasData(
                        new { OrganizationId = new Guid("123e4567-e89b-12d3-a456-426655440001"), ActiveAddressId = 0, Description = "Description for Organization 1", IsHospital = false, Name = "Organization1", Ssn = "000000001" },
                        new { OrganizationId = new Guid("123e4567-e89b-12d3-a456-426655440002"), ActiveAddressId = 0, Description = "Description for Organization 2", IsHospital = false, Name = "Organization1", Ssn = "000000002" }
                    );
                });

            modelBuilder.Entity("Organizations.Api.Persistence.Entities.Phone", b =>
                {
                    b.Property<Guid>("PhoneId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Extension");

                    b.Property<bool>("IsForDisplay");

                    b.Property<Guid>("OrganizationId");

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<string>("Type");

                    b.HasKey("PhoneId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Phones");

                    b.HasData(
                        new { PhoneId = new Guid("123e4567-e89b-12d3-a456-426655440003"), Extension = "123", IsForDisplay = false, OrganizationId = new Guid("123e4567-e89b-12d3-a456-426655440001"), PhoneNumber = "1234567890" },
                        new { PhoneId = new Guid("123e4567-e89b-12d3-a456-426655440004"), Extension = "123", IsForDisplay = false, OrganizationId = new Guid("123e4567-e89b-12d3-a456-426655440001"), PhoneNumber = "1234567890" },
                        new { PhoneId = new Guid("123e4567-e89b-12d3-a456-426655440005"), Extension = "123", IsForDisplay = false, OrganizationId = new Guid("123e4567-e89b-12d3-a456-426655440002"), PhoneNumber = "1234567890" }
                    );
                });

            modelBuilder.Entity("Organizations.Api.Persistence.Entities.Address", b =>
                {
                    b.HasOne("Organizations.Api.Persistence.Entities.Organization", "Organization")
                        .WithMany("Addresses")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Organizations.Api.Persistence.Entities.Phone", b =>
                {
                    b.HasOne("Organizations.Api.Persistence.Entities.Organization", "Organization")
                        .WithMany("Phones")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
